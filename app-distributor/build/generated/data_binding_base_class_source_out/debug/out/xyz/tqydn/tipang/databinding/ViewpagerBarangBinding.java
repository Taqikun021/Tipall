// Generated by view binder compiler. Do not edit!
package xyz.tqydn.tipang.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import xyz.tqydn.tipang.R;

public final class ViewpagerBarangBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView HargaBarang;

  @NonNull
  public final ImageView barang;

  @NonNull
  public final CardView cardBarang;

  @NonNull
  public final TextView descBarang;

  @NonNull
  public final TextView namaBarang;

  @NonNull
  public final TextView stok;

  private ViewpagerBarangBinding(@NonNull ConstraintLayout rootView, @NonNull TextView HargaBarang,
      @NonNull ImageView barang, @NonNull CardView cardBarang, @NonNull TextView descBarang,
      @NonNull TextView namaBarang, @NonNull TextView stok) {
    this.rootView = rootView;
    this.HargaBarang = HargaBarang;
    this.barang = barang;
    this.cardBarang = cardBarang;
    this.descBarang = descBarang;
    this.namaBarang = namaBarang;
    this.stok = stok;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewpagerBarangBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewpagerBarangBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.viewpager_barang, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewpagerBarangBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.HargaBarang;
      TextView HargaBarang = rootView.findViewById(id);
      if (HargaBarang == null) {
        break missingId;
      }

      id = R.id.barang;
      ImageView barang = rootView.findViewById(id);
      if (barang == null) {
        break missingId;
      }

      id = R.id.cardBarang;
      CardView cardBarang = rootView.findViewById(id);
      if (cardBarang == null) {
        break missingId;
      }

      id = R.id.descBarang;
      TextView descBarang = rootView.findViewById(id);
      if (descBarang == null) {
        break missingId;
      }

      id = R.id.namaBarang;
      TextView namaBarang = rootView.findViewById(id);
      if (namaBarang == null) {
        break missingId;
      }

      id = R.id.stok;
      TextView stok = rootView.findViewById(id);
      if (stok == null) {
        break missingId;
      }

      return new ViewpagerBarangBinding((ConstraintLayout) rootView, HargaBarang, barang,
          cardBarang, descBarang, namaBarang, stok);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
