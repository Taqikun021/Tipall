// Generated by view binder compiler. Do not edit!
package xyz.tqydn.tipall.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import xyz.tqydn.tipall.R;

public final class RowBelumDibayarBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView cardBelumdibayar;

  @NonNull
  public final CardView cv;

  @NonNull
  public final Button hubungi;

  @NonNull
  public final ImageView imagePenjual;

  @NonNull
  public final ImageView imagePenjualFix;

  @NonNull
  public final TextView jarak;

  @NonNull
  public final TextView jumlahStok;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout ll;

  @NonNull
  public final TextView namaBarang;

  @NonNull
  public final TextView namaPemilik;

  @NonNull
  public final TextView namaUsaha;

  @NonNull
  public final Button petunjukArah;

  @NonNull
  public final TextView tagihan;

  @NonNull
  public final TextView waktu;

  private RowBelumDibayarBinding(@NonNull CardView rootView, @NonNull CardView cardBelumdibayar,
      @NonNull CardView cv, @NonNull Button hubungi, @NonNull ImageView imagePenjual,
      @NonNull ImageView imagePenjualFix, @NonNull TextView jarak, @NonNull TextView jumlahStok,
      @NonNull LinearLayout linearLayout, @NonNull LinearLayout ll, @NonNull TextView namaBarang,
      @NonNull TextView namaPemilik, @NonNull TextView namaUsaha, @NonNull Button petunjukArah,
      @NonNull TextView tagihan, @NonNull TextView waktu) {
    this.rootView = rootView;
    this.cardBelumdibayar = cardBelumdibayar;
    this.cv = cv;
    this.hubungi = hubungi;
    this.imagePenjual = imagePenjual;
    this.imagePenjualFix = imagePenjualFix;
    this.jarak = jarak;
    this.jumlahStok = jumlahStok;
    this.linearLayout = linearLayout;
    this.ll = ll;
    this.namaBarang = namaBarang;
    this.namaPemilik = namaPemilik;
    this.namaUsaha = namaUsaha;
    this.petunjukArah = petunjukArah;
    this.tagihan = tagihan;
    this.waktu = waktu;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RowBelumDibayarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowBelumDibayarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_belum_dibayar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowBelumDibayarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView cardBelumdibayar = (CardView) rootView;

      id = R.id.cv;
      CardView cv = rootView.findViewById(id);
      if (cv == null) {
        break missingId;
      }

      id = R.id.hubungi;
      Button hubungi = rootView.findViewById(id);
      if (hubungi == null) {
        break missingId;
      }

      id = R.id.imagePenjual;
      ImageView imagePenjual = rootView.findViewById(id);
      if (imagePenjual == null) {
        break missingId;
      }

      id = R.id.imagePenjualFix;
      ImageView imagePenjualFix = rootView.findViewById(id);
      if (imagePenjualFix == null) {
        break missingId;
      }

      id = R.id.jarak;
      TextView jarak = rootView.findViewById(id);
      if (jarak == null) {
        break missingId;
      }

      id = R.id.jumlahStok;
      TextView jumlahStok = rootView.findViewById(id);
      if (jumlahStok == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.ll;
      LinearLayout ll = rootView.findViewById(id);
      if (ll == null) {
        break missingId;
      }

      id = R.id.namaBarang;
      TextView namaBarang = rootView.findViewById(id);
      if (namaBarang == null) {
        break missingId;
      }

      id = R.id.namaPemilik;
      TextView namaPemilik = rootView.findViewById(id);
      if (namaPemilik == null) {
        break missingId;
      }

      id = R.id.namaUsaha;
      TextView namaUsaha = rootView.findViewById(id);
      if (namaUsaha == null) {
        break missingId;
      }

      id = R.id.petunjukArah;
      Button petunjukArah = rootView.findViewById(id);
      if (petunjukArah == null) {
        break missingId;
      }

      id = R.id.tagihan;
      TextView tagihan = rootView.findViewById(id);
      if (tagihan == null) {
        break missingId;
      }

      id = R.id.waktu;
      TextView waktu = rootView.findViewById(id);
      if (waktu == null) {
        break missingId;
      }

      return new RowBelumDibayarBinding((CardView) rootView, cardBelumdibayar, cv, hubungi,
          imagePenjual, imagePenjualFix, jarak, jumlahStok, linearLayout, ll, namaBarang,
          namaPemilik, namaUsaha, petunjukArah, tagihan, waktu);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
