// Generated by view binder compiler. Do not edit!
package xyz.tqydn.tipall.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import xyz.tqydn.tipall.R;

public final class RowBarangBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView HargaBarang;

  @NonNull
  public final CardView cardPenjual;

  @NonNull
  public final ImageView imageBarang;

  @NonNull
  public final ImageView imagePenjual;

  @NonNull
  public final TextView jarak;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView namaBarang;

  @NonNull
  public final TextView namaPemilik;

  @NonNull
  public final TextView stok;

  private RowBarangBinding(@NonNull CardView rootView, @NonNull TextView HargaBarang,
      @NonNull CardView cardPenjual, @NonNull ImageView imageBarang,
      @NonNull ImageView imagePenjual, @NonNull TextView jarak, @NonNull LinearLayout linearLayout,
      @NonNull TextView namaBarang, @NonNull TextView namaPemilik, @NonNull TextView stok) {
    this.rootView = rootView;
    this.HargaBarang = HargaBarang;
    this.cardPenjual = cardPenjual;
    this.imageBarang = imageBarang;
    this.imagePenjual = imagePenjual;
    this.jarak = jarak;
    this.linearLayout = linearLayout;
    this.namaBarang = namaBarang;
    this.namaPemilik = namaPemilik;
    this.stok = stok;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RowBarangBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowBarangBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_barang, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowBarangBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.HargaBarang;
      TextView HargaBarang = rootView.findViewById(id);
      if (HargaBarang == null) {
        break missingId;
      }

      CardView cardPenjual = (CardView) rootView;

      id = R.id.imageBarang;
      ImageView imageBarang = rootView.findViewById(id);
      if (imageBarang == null) {
        break missingId;
      }

      id = R.id.imagePenjual;
      ImageView imagePenjual = rootView.findViewById(id);
      if (imagePenjual == null) {
        break missingId;
      }

      id = R.id.jarak;
      TextView jarak = rootView.findViewById(id);
      if (jarak == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.namaBarang;
      TextView namaBarang = rootView.findViewById(id);
      if (namaBarang == null) {
        break missingId;
      }

      id = R.id.namaPemilik;
      TextView namaPemilik = rootView.findViewById(id);
      if (namaPemilik == null) {
        break missingId;
      }

      id = R.id.stok;
      TextView stok = rootView.findViewById(id);
      if (stok == null) {
        break missingId;
      }

      return new RowBarangBinding((CardView) rootView, HargaBarang, cardPenjual, imageBarang,
          imagePenjual, jarak, linearLayout, namaBarang, namaPemilik, stok);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
